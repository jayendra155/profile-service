plugins {
    id 'idea'
    id 'eclipse'
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

group = 'com.user'
version = project.property("version")
//sourceCompatibility = '11'

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-data-mongodb'
    api 'org.springframework.boot:spring-boot-starter-data-redis'
    api 'javax.validation:validation-api:2.0.1.Final'
    api 'commons-io:commons-io:2.6'
    implementation 'org.mapstruct:mapstruct:1.3.0.Final'
    implementation 'org.mapstruct:mapstruct-processor:1.3.0.Final'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9.3'
    implementation libs.json
    compileOnly 'org.mapstruct:mapstruct-processor:1.3.0.Final'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9.3'
    testImplementation 'com.fasterxml.jackson.module:jackson-module-jsonSchema:2.9.9'
    testImplementation libs.json
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled(false)
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}