plugins {
    id 'idea'
    id 'eclipse'
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

version = project.version

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.boot:spring-boot-starter-data-rest'
    api 'org.springframework.boot:spring-boot-starter-hateoas'
    api 'org.springframework.cloud:spring-cloud-starter-sleuth'
    api 'org.springframework.boot:spring-boot-starter-cache'
    api 'org.springframework.boot:spring-boot-starter-data-redis'
//    api 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    //api 'com.hazelcast:hazelcast:5.1.1'
    api libs.kafka
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-context:2.1.2.RELEASE'
    api project(':model')
    api libs.apacheLang3
    api 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled(false)
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}